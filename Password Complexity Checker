import tkinter as tk
from tkinter import Canvas, Scrollbar, Frame

def check_password_strength(password):
    criteria = {
        "Length": len(password) >= 8,
        "Uppercase": any(char.isupper() for char in password),
        "Lowercase": any(char.islower() for char in password),
        "Numbers": any(char.isdigit() for char in password),
        "Special Characters": any(char in "!@#$%^&*()-_=+[]{}|;:'\",.<>?/" for char in password)
    }

    score = sum(criteria.values())
    percentage = (score / len(criteria)) * 100  # Calculate percentage based on criteria met

    if score < 3:
        strength = "Weak"
        feedback = "Consider the following:\n- At least 8 characters\n- Include uppercase, lowercase, numbers, and special characters."
        color = "#ff4d4d"  # Red
    elif score == 3:
        strength = "Moderate"
        feedback = "Good job! Try to improve by adding:\n- More variety in characters."
        color = "#ffcc00"  # Orange
    else:
        strength = "Strong"
        feedback = "Great! Your password meets strong criteria."
        color = "#4caf50"  # Green

    return strength, feedback, color, percentage, criteria

def assess_password():
    password = password_entry.get()
    strength, feedback, color, percentage, criteria = check_password_strength(password)

    result_label.config(text=f"Password Strength: {strength}")
    feedback_label.config(text=feedback)
    update_strength_meter(color, percentage)
    log_password(password, strength)

def update_strength_meter(color, percentage):
    meter_canvas.delete("all")
    meter_canvas.create_rectangle(0, 0, 400 * (percentage / 100), 30, fill=color)
    meter_canvas.create_text(200, 15, text=f"{int(percentage)}%", fill="white", font=("Helvetica", 12, "bold"))

def log_password(password, strength):
    history_text = f"{password} - {strength}\n"
    history_list.insert(tk.END, history_text)

def toggle_history():
    if history_frame.winfo_ismapped():
        history_frame.pack_forget()
        toggle_button.config(text="Show History Log")
    else:
        history_frame.pack(pady=10)
        toggle_button.config(text="Hide History Log")

# Create the main window
root = tk.Tk()
root.title("Advanced Password Complexity Checker")
root.geometry("450x600")

# Create and place the widgets
tk.Label(root, text="Enter your password:", font=('Helvetica', 14)).pack(pady=10)
password_entry = tk.Entry(root, width=30, font="Helvetica", show="*")
password_entry.pack(pady=5)

tk.Button(root, text="Check Strength", command=assess_password).pack(pady=10)

result_label = tk.Label(root, text="", font=('Helvetica', 12, 'bold'))
result_label.pack(pady=5)

feedback_label = tk.Label(root, text="", font=('Helvetica', 12))
feedback_label.pack(pady=5)

# Create a canvas for the strength meter
meter_canvas = Canvas(root, width=400, height=30, bg="lightgray")
meter_canvas.pack(pady=20)

# Create a frame for the history log with scrollbar (initially hidden)
history_frame = Frame(root)
history_frame.pack_forget()  # Hide the frame initially

history_scrollbar = Scrollbar(history_frame)
history_scrollbar.pack(side=tk.RIGHT, fill=tk.Y)

history_list = tk.Listbox(history_frame, width=50, height=10, yscrollcommand=history_scrollbar.set)
history_list.pack()

history_scrollbar.config(command=history_list.yview)

# Toggle button for history log visibility
toggle_button = tk.Button(root, text="Show History Log", command=toggle_history)
toggle_button.pack(pady=10)

# Run the application
root.mainloop()
